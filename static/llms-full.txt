Below is all the contents of our docs: 



 This is the content for the doc /docs/Misc/Generating-an-API-Key.md 

 # Generating an API Key## Step 1: Click on the Avatar IconClick on the circular avatar icon to open the profile menu.xzcxzc![generating\_an\_api\_key/step\_2](/img/generating_an_api_key/step_2.png)## Step 2: Click on Personal API keysClick on the link that says "Personal API keys".![generating\_an\_api\_key/step\_3](/img/generating_an_api_key/step_3.png)## Step 3: Click on Replace and Create New API Key buttonClick on the "Replace and create new API key" button to generate a new API key.![generating\_an\_api\_key/step\_4](/img/generating_an_api_key/step_4.png)## Step 5: Replace API KeyOn the page https://www.dev-docs.io/personal\_api\_keys, click on the button with the text "Replace and create new API Key".![generating\_an\_api\_key/step\_5](/img/generating_an_api_key/step_5.png)Then copy the Dev-Docs API-Key for future use


 This is the content for the doc /docs/Overview.md 

 # Welcome to Docs.dev: Your AI powered docs assistantThe following guides and resources will help you get started managing your docs with Docs.dev.Docs.dev was purpose built to help docs teams create and manage their docs. All you need to do is sync up your docs repo on GitHub and you're good to go. By leveraging AI-assisted content generation and intuitive editing tools you can significantly reduce the time and effort required to produce and maintain high-quality documentation. Optionally, connect Docs.dev directly with your codebase to ensure that your docs stay up-to-date and aligned as your code changes. With collaborative features and automated workflows, you can not only enhance team productivity but also improve the overall quality and consistency of your docs, ultimately supporting better SEO and sales efforts.![](/img/hero_image.png)


 This is the content for the doc /docs/Quickstart.md 

 # QuickstartWelcome to Docs.dev! Follow the steps below to get started in ***under 5 minutes***.## Prerequisites\* A GitHub account for authenticating with [Docs.dev](http://Docs.dev).\* A documentation repo in GitHub. If you do not have one, go [here](/docs/editor/connect-the-starter-template-to-the-ai-editor) and follow the guide to set up a new docs repo using our open source Docusaurus template.## Create accountGo to [app.docs.dev](http://app.docs.dev) and log in with GitHub to create your account and create an org within Docs.dev.## Setup and connect your docs repoClick setup to go through the onboarding and connect your existing docs repo in GitHub. If you do not have an existing docs repo, you can either create one yourself and connect it or leverage our open source Docusaurus template by following the instructions [here](/docs/editor/connect-the-starter-template-to-the-ai-editor).### Connect your existing docsSelect **Connect your own docs** to set up Docs.dev to work with your existing documentation. You will be taken to GitHub to install our GitHub App and will need to connect it to your documentation repo. You will need the repository owner to approve the request if you lack the permissions needed to install GitHub Apps on your repo.We recommend you start by providing access to only the repo where your docs are hosted from to start. You can always come back and connect additional repos that you would like to use as context at a later time (i.e. public SDKs or codebases) in order to take full advantage of Docs.dev.Once you have installed the GitHub App and selected which repo(s) to connect, come back to [app.docs.dev](https://app.docs.dev/) and close the loop by inputting which repo your documentation lives in. Congrats! Now you're all set up and ready to go! Select **Edit docs** to open up the web editor and get going.See [here](/docs/editor/connect-existing-docs-repo-to-editor) for a step by step guide on connecting your existing docs.## SupportShoot us a note at founders@dev-docs.io if you have any questions at all or would like us to help get you set up or give you tour. We'd love to show you around!


 This is the content for the doc /docs/automations.md 

 # Automate the process in GitHub (beta)Prevent documentation drift by automating your docs directly in the GitHub workflow\* Generate docs from PRs\* Get flagged when docs are out of date\* and moreThis feature is in beta. Reach out directly to get set up.


 This is the content for the doc /docs/editor/connect-existing-docs-repo-to-editor.md 

 # Connect your docs repo## Step 1: Begin setup to connect your docsWhen first setting up your Docs.dev account you will be prompted to set up your docs. Select Connect your own docs and click on Install the GitHub App to begin the integration process.![Set up docs](/img/newconnectdocsui.png)## Step 2: Set up User-Facing Docs by installing the GitHub AppTo use your existing docs, select **Connect your own docs** and click on **Install the GitHub App** to begin the integration process. Clicking this will take you out of Docs.dev and into your GitHub where you can install and set up the Dev-Docs GitHub App.![Set up User-Facing Docs](/img/connect_the_starter_template_to_the_ai_editor/step_11.png)## Step 3: Confirm repository selection in GitHubSelect **Install** or **Configure** if you have installed the app already.![](/img/connect_the_starter_template_to_the_ai_editor/step_13.png)## Step 4: Select your GitHub account or organizationChoose the GitHub account or organization where you want to install the app.![](/img/connect_the_starter_template_to_the_ai_editor/step_16.png)## Step 5: Add and select your documentation repoFrom the dropdown, find your docs repo. Feel free to connect any other public codebases you would like the app to have access to as context. Be sure to select it and select **Save.**![](/img/connect_the_starter_template_to_the_ai_editor/step_17.png)## Step 6: Associate your repository with your Dev-Docs organizationOnce done, go back to the Docs.dev web app and confirm that your repository name matches your desired Docs.dev organization and select **Complete GitHub App Setup**.![](/img/connect_the_starter_template_to_the_ai_editor/step_22.png)## Step 7: Set your documentation repo in Dev-DocsYou should now see a dialog prompting you to select your documentation repository. Choose the one we set up from the dropdown. This step informs Docs.dev where your documentation lives and where the Docs.dev editor should pull from. Once this step is done you're all set and ready to go!![](/img/connect_the_starter_template_to_the_ai_editor/step_25.png)


 This is the content for the doc /docs/editor/connect-the-starter-template-to-the-ai-editor.md 

 # Create new docs repo## Step 1: Begin setup When first setting up your Docs.dev account you will be prompted to set up your docs. If you don't have a documentation repo and you would like use our starter template, select **Don't have docs to connect? Use our GitHub docs template**. Clicking this will take you out of Docs.dev and into your GitHub where you can install and set up the Dev-Docs GitHub App.![Generate Starter Template](/img/newconnectdocsui.png)## Step 3: Create a new repo on GitHubOn the GitHub page, click on **New repo** to create a new repo for your documentation.![Create new repository](/img/connect_the_starter_template_to_the_ai_editor/step_4.png)## Step 4: Set up the repo detailsFill in the repository details:\* Choose the repository template (e.g., team-dev-docs/starter-template-v3)\* Set the owner\* Name your repository (e.g., my\_cool\_new\_docs)\* Choose visibility (public or private)Click **Create repository** when done.![Set up repository](/img/connect_the_starter_template_to_the_ai_editor/step_5.png)## Step 5: View the newly created repoYour new repo is now created with the initial commit and files from the template.![View new repository](/img/connect_the_starter_template_to_the_ai_editor/step_7.png)## Step 6: Return to Dev-Docs to connect your new docsOnce the new repo is set up, go back to the Docs.dev web app and confirm that your repo name matches your desired Docs.dev organization and select **Connect your own docs** to proceed.![Set up docs](/img/connect_the_starter_template_to_the_ai_editor/step_8.png)## Step 7: Set up User-Facing Docs by installing GitHub AppSelect **Connect your own docs** and click on **Install the GitHub App** to begin the integration process. Clicking this will take you out of Docs.dev and into your GitHub where you can install and set up the Dev-Docs GitHub App.![Set up User-Facing Docs](/img/connect_the_starter_template_to_the_ai_editor/step_11.png)## Step 8: Confirm repo selection for GitHub AppSelect **Install** or **Configure** if you have installed the app already.![Confirm repository selection](/img/connect_the_starter_template_to_the_ai_editor/step_13.png)## Step 9: Select your GitHub account or organizationChoose the GitHub account or organization where you want to install the app.![Select GitHub account](/img/connect_the_starter_template_to_the_ai_editor/step_16.png)## Step 10: Add the documentation repoFrom the dropdown, find your newly created docs repo. Feel free to connect any other public codebases you would like the app to have access to as context. Be sure to select it and select **Save.**![Add docs repo](/img/connect_the_starter_template_to_the_ai_editor/step_17.png)## Step 11: Associate your repo with your Dev-Docs organizationOnce done, go back to the [Docs.dev](http://Docs.dev) web app and confirm that your repo name matches your desired [Docs.dev](http://Docs.dev) organization and select **Complete GitHub App Setup**.![Associate repo with Dev-Docs org](/img/connect_the_starter_template_to_the_ai_editor/step_22.png)## Step 12: Set your documentation repo in Dev-DocsYou should now see a dialog prompting you to select your documentation repo. Choose the one we set up from the dropdown. This step informs [Docs.dev](http://Docs.dev) where your documentation lives and where the [Docs.dev](http://Docs.dev) editor should pull from. Once this step is done you're all set and ready to go!


 This is the content for the doc /docs/managingcontent/advancedAItools.md 

 # Generate and manage docs with AIDocs.dev AI can be used to generate new drafts directly from your existing docs and public codebases, as well as to manage your docs as a whole. You can access these advanced features by selecting **AI Tools** in the top right of the editor and selecting the functionality you'd like from the dropdown.Refer to the guides below to learn how to learn how you can use AI to help you generate and maintain your docs.## Audit docs**Audit docs** allows you to have AI scan your existing docs based on any prompt of your choosing. Examples of how to use it include spelling and grammar checks across your docs or making broad sweeping changes across all your docs, such as changing names or links. Follow the steps below to audit your existing docs:\* Select **AI tools** in the top right hand corner of the web editor and navigate to **Audit docs** in the drop down menu.\* Select which docs or folders you would like to check against. If you would like for the AI to also check your docs against your codebase, you can select the checkbox. Selecting this will bring the codebases you have connected to the GitHub App into the same drop down menu.\* Add any prompt you choose into the **Describe what you want to audit field**.\* Select **Submit** once you have your prompt ready and let the AI go to work.When complete, you will see a table of suggested changes when finished. Select which docs you would like it automatically generate. Everything generated here will go back into the web editor so you can edit as you see fit and then push to the GitHub branch of your choosing when ready.## Analyze docsThe **Analyze docs** feature allows you to analyze the quality of your existing documentation as a whole. Note that this doesn't check against individual docs but instead your entire docs repo. Follow the steps below to analyze your existing docs:\* Select **AI tools** in the top right hand corner of the web editor and navigate to **Analyze docs** in the drop down menu.\* Once selected the AI will go to work and will start to analyze your docs.When finished you'll see a list of personas that have grades against them. These are the personas that the AI believes your docs are intended to be positioned towards, as well as a grade for how effective they are at speaking to that persona. Below you'll see the AI suggest some docs that it believes will be helpful to add to your docs site to improve the effectiveness for a given persona. Select which files you'd like to generate and let the AI create some drafts for you.Everything generated here will go back into the web editor so you can edit as you see fit and then push to the GitHub branch of your choosing when ready.## Generate contentThe **Generate content** feature allows you to generate new docs from your existing documentation and other connected codebases. Follow the steps below to generate a new doc:\* Select **AI tools** in the top right hand corner of the web editor and navigate to **Generate content** in the drop down menu.\* Select which docs you would like to use as context.\* (Optional) You can also check the checkbox to use your other connected codebases as context.\* Once you have all your context selected, insert your prompt into the text field and hit submit to get a new doc page.Everything generated here will go back into the web editor so you can edit as you see fit and then push to the GitHub branch of your choosing when ready.## Generate docs from code objectsThis feature allows you to generate net new docs from code objects in your codebase or SDK. The AI will search your selected codebase for relevant code objects and recommend which it believes should have docs on them. Follow the steps below to generate docs from code objects:\* Select the **AI tools** drop down in the top right hand corner of the web editor and select **Code objects** in the drop down menu.\* Go through the drop down menus to select which code files the code objects are defined in and then which files have relevant context (if any) for those code objects.\* Enter in which types of objects you would like the AI to search for and suggest docs for.\* Select **Submit** and the AI will go into the selected codebase(s) to find the relevant objects it believes will be helpful to document.When finished, you will see a table of suggested docs where you can select which docs you would like to generate. Everything generated here will go back into the web editor so you can edit as you see fit and then push to GitHub when ready.Note: the files in the drop down menus are from the codebases you connected to our GitHub app. If you do not see the relevant code files you can go into our GitHub App settings within GitHub to connect additional repos.## Generate complete docsThe Generate complete docs feature is meant for those without any existing documentation footprint. Using this feature will have the AI scan your selected codebase and suggest multiple documentation pages that it believes will help a user leverage your product. You can then select which pages you want it to create. Follow the steps below to generate a set of new docs directly from your codebase:\* Select **AI tools** in the top right hand corner of the web editor and navigate to **Generate complete docs** in the drop down menu.\* Select which codebase you would like to generate docs for and then select **Generate documentation**.Watch the AI go to work and generate a new set of docs for your project. Once generated, everything generated will go back into the web editor so you can edit as you see fit and then push to the GitHub branch of your choosing when ready.


 This is the content for the doc /docs/managingcontent/webeditor.md 

 # Create and manage contentUse the [Docs.dev](http://Docs.dev) web editor to generate new content and manage your existing docs directly with your existing workflow. Once connected with your docs repo on GitHub (see [Quickstart](https://learn.docs.dev/docs/Quickstart)), all your markdown docs will be viewable and editable directly in a rich text editor. Use the editor to create new drafts, edit existing content, leverage AI assisted writing capabilities, and more. Everything you do will be pushed back to the GitHub branch of your choosing as markdown or mdx, where you can edit and continue with your normal editing and publishing workflow.Below you'll see some information on how the web editor works and some of the basic functionality of it. Refer to the additional docs to learn how to leverage the more advanced AI functionality that Docs.dev has to offer.## GitHub branch logicDocs.dev pulls in your docs from the repo you selected. However, you have full control over what branch you are editing on and you push your edits to.### Editing branchOn the left hand side of the web editor screen you'll be able to view all your published documentation (select **Published)**, as well as any drafts you are currently working on. At the top of the left hand side of the screen you will see the branch that you are editing on. Select the button displaying the branch to choose which branch you would like to work off of or create a new branch directly from the web editor. All new drafts and edits made will be synced directly to this branch.### Push to GitHubAll edits made will be automatically synced with the editing branch selected on the top left of the screen. When you are ready to push your edits to a new branch you can select **Push to GitHub** on the top right of the web editor screen. Once selected you will be able to select which drafts you want to push as well as which branch you want to push the drafts to.## Additional editing tools### AI assisted writingHighlight any text and select **AI tools **to have AI assist your writing. You can use this to edit length, change tone, spell check and more.### Drop down menuHighlight any text, select the `+` button, or type `/` to view a drop down menu where you can:\* Format headings\* Create bulleted and numbered lists\* Insert a code block\* Add and image\* Add a table\* Ask Docs.dev AI for assistance### Add and edit frontmatterSelect the information button on the top right of web editor to add or edit frontmatter.### View in GitHubYou can always go back to GitHub to view the doc you have open by selecting the information button on the top right and selecting **View on GitHub**. Feel free to edit in GitHub, locally or however you choose! Any changes made in the web editor or on GitHub will be bidirectionally synced.### Renaming and deleting draftsSelect the three dots next to your drafts on the left hand side of the web editor screen to rename or delete drafts. You can select multiple drafts by clicking the three lines button between where it says **Drafts** and the **Search** button (magnifying glass).## View raw markdown contentSelect the **Rich text editor** dropdown in the top right and select **Raw markdown** to view the raw markdown that your doc will be pushed to GitHub as. We do not offer functionality to edit in raw markdown from the web editor today but you can always do so directly in GitHub, in a local environment or however you choose.
